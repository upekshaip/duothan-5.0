generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root@localhost:3306/duothan"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  role      String   @default("USER")
  signupType String   @default("EMAIL")
  gender    String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teamId    Int?
  nic       String?
  team      Team?     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  algorithmicAnswers AlgorithmicAnswers[]
  buildathonAnswers BuildathonAnswers[]

}

model Team {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  algorithmicAnswers AlgorithmicAnswers[]
  buildathonAnswers BuildathonAnswers[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  role      String   @default("ADMIN")
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  challenges Challenge[]
}

model Challenge {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  algoQuestion String?
  buildQuestion String?
  algoMark   Int    @default(0)
  buildMark  Int    @default(0)
  flag        String?
  status     String   @default("PENDING")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   Int
  admin       Admin    @relation(fields: [createdBy], references: [id])
}

model AlgorithmicAnswers {
id          Int      @id @default(autoincrement())
answer     String
userId     Int
user       User     @relation(fields: [userId], references: [id])
teamId     Int
team       Team     @relation(fields: [teamId], references: [id])
timeTaken   Int?    @default(0)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

}
model BuildathonAnswers {
  id          Int      @id @default(autoincrement())
  answer     String
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  teamId     Int
  team       Team     @relation(fields: [teamId], references: [id])
  timeTaken   Int?    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

